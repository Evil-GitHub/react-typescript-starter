apiVersion: apps/v1
kind: Deployment
metadata:
  name: evil-pro-frontend
  namespace: default
  labels:
    app: evil-pro-frontend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: evil-pro-frontend
  template:
    metadata:
      labels:
        app: evil-pro-frontend
        version: v1
    spec:
      containers:
      - name: evil-pro-frontend
        image: evil-pro:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
        - name: API_BACKEND_URL
          value: "http://evil-pro-backend-service:8080"
        envFrom:
        - configMapRef:
            name: evil-pro-config
        - secretRef:
            name: evil-pro-secrets
            optional: true
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: nginx-config
        configMap:
          name: evil-pro-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: evil-pro-frontend-service
  namespace: default
  labels:
    app: evil-pro-frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: evil-pro-frontend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: evil-pro-frontend-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: evil-pro-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: evil-pro-frontend-service
            port:
              number: 80
